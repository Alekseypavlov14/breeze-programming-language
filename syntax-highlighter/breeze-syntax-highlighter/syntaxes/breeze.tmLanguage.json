{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Breeze",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{ 
			"include": "#function-definitions" 
		},
		{ 
			"include": "#method-calls" 
		},
		{
			"include": "#function-calls"
		},
    { 
			"include": "#identifiers" 
		},
		{ 
			"include": "#operators" 
		},
		{
			"include": "#brackets"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.breeze",
					"match": "\\b(if|else|while|for|break|continue|return|import|export|from|class|new)\\b"
				},
				{
					"name": "storage.type.function",
					"match": "\\b(function)\\b"
				},
				{
					"name": "storage.modifier",
					"match": "\\b(const|var)\\b"
				}
			]
		},
		"comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.breeze",
          "begin": "//",
          "end": "\\n"
        }
      ]
    },
		"strings": {
			"name": "string.quoted.double.breeze",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.breeze",
					"match": "\\\\."
				}
			]
		},
		"operators": {
      "patterns": [
        {
          "name": "keyword.operator.breeze",
          "match": "\\+|\\-|\\*|\\/|%|==|!=|=|<=|>=|<|>|\\+=|\\-=|\\*=|\\/=|&&|\\|\\||!"
        }
      ]
    },
		"function-definitions": {
			"patterns": [
				{
					"name": "entity.name.function.breeze",
					"match": "\\bfunction\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
					"captures": {
						"1": { "name": "entity.name.function.breeze" }
					}
				}
			]
		},
		"method-calls": {
			"patterns": [
				{
					"name": "support.function.method.breeze",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\.([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
					"captures": {
						"1": { "name": "variable.other.object.breeze" },
						"2": { "name": "support.function.method.breeze" }
					}
				}
			]
		},
		"function-calls": {
			"patterns": [
				{
					"name": "support.function.breeze",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
				}
			]
		},
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.identifier.breeze",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.breeze",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },
		"brackets": {
			"patterns": [
				{
					"match": "[\\{\\}]",
					"name": "punctuation.section.braces.breeze"
				},
				{
					"match": "[\\[\\]]",
					"name": "punctuation.section.brackets.breeze"
				},
				{
					"match": "[\\(\\)]",
					"name": "punctuation.section.parens.breeze"
				}
			]
		}
	},
	"scopeName": "source.breeze"
}