# general
IDENTIFIER_TOKEN = ('IDENTIFIER', r'[a-zA-Z_][a-zA-Z0-9_]*')
COMMENT_TOKEN = ('COMMENT', r'\/\/')
NEWLINE_TOKEN = ('NEWLINE', r'\n')
SPACE_TOKEN = ('SPACE', r'\s')

# literals
NUMBER_TOKEN = ('NUMBER', r'\d[\d\.]*')
STRING_TOKEN = ('STRING', r"\"((?:[^\"\\]|\\.)*?)\"|\'((?:[^\'\\]|\\.)*?)\'")

# logical
GREATER_THAN_OR_EQUAL_TOKEN = ('GREATER_THAN_OR_EQUAL', r'>=')
GREATER_THAN_TOKEN = ('GREATER_THAN', r'>')
LESS_THAN_OR_EQUAL_TOKEN = ('LESS_THAN_OR_EQUAL', r'<=')
LESS_THAN_TOKEN = ('LESS_THAN', r'<')
EQUAL_TOKEN = ('EQUAL', r'==')
NOT_EQUAL_TOKEN = ('NOT_EQUAL', r'!=')
AND_TOKEN = ('AND', r'&&')
OR_TOKEN = ('OR', r'\|\|')

# unary operators
INCREMENT_TOKEN = ('INCREMENT', r'\+\+')
DECREMENT_TOKEN = ('DECREMENT', r'--')

# binary operators
ASSIGN_TOKEN = ('ASSIGN', r'=')
PLUS_TOKEN = ('PLUS', r'\+')
PLUS_ASSIGN_TOKEN = ('PLUS_ASSIGN', r'\+=')
MINUS_TOKEN = ('MINUS', r'-')
MINUS_ASSIGN_TOKEN = ('MINUS_ASSIGN', r'-=')
MULTIPLICATION_TOKEN = ('MULTIPLICATION', r'\*')
MULTIPLICATION_ASSIGN_TOKEN = ('MULTIPLICATION_ASSIGN', r'\*=')
DIVISION_TOKEN = ('DIVISION', r'\/')
DIVISION_ASSIGN_TOKEN = ('DIVISION_ASSIGN', r'\/=')

# braces
LEFT_PARENTHESES_TOKEN = ('LEFT_PARENTHESES', r'\(')
RIGHT_PARENTHESES_TOKEN = ('RIGHT_PARENTHESES', r'\)')
LEFT_CURLY_BRACE_TOKEN = ('LEFT_CURLY_BRACE', r'\{')
RIGHT_CURLY_BRACE_TOKEN = ('RIGHT_CURLY_BRACE', r'\}')
LEFT_SQUARE_BRACKET_TOKEN = ('LEFT_SQUARE_BRACKET', r'\[')
RIGHT_SQUARE_BRACKET_TOKEN = ('RIGHT_SQUARE_BRACKET', r'\]')

# quotes
QUOTE_TOKEN = ('QUOTE', r'\'')
DOUBLE_QUOTE_TOKEN = ('DOUBLE_QUOTE', r'\"')

# special symbols
COMMA_TOKEN = ('COMMA', r'\,')
DOT_TOKEN = ('DOT', r'\.')
QUESTION_TOKEN = ('QUESTION', r'\?')

TOKEN_SPECIFICATION = [
  IDENTIFIER_TOKEN,
  COMMENT_TOKEN,
  NEWLINE_TOKEN,
  SPACE_TOKEN,

  NUMBER_TOKEN,
  STRING_TOKEN,
  
  GREATER_THAN_OR_EQUAL_TOKEN,
  GREATER_THAN_TOKEN,
  LESS_THAN_OR_EQUAL_TOKEN,
  LESS_THAN_TOKEN,
  EQUAL_TOKEN,
  NOT_EQUAL_TOKEN,
  AND_TOKEN,
  OR_TOKEN,

  INCREMENT_TOKEN,
  DECREMENT_TOKEN,
  
  ASSIGN_TOKEN,
  PLUS_TOKEN,
  PLUS_ASSIGN_TOKEN,
  MINUS_TOKEN,
  MINUS_ASSIGN_TOKEN,
  MULTIPLICATION_TOKEN,
  MULTIPLICATION_ASSIGN_TOKEN,
  DIVISION_TOKEN,
  DIVISION_ASSIGN_TOKEN,
  
  LEFT_PARENTHESES_TOKEN,
  RIGHT_PARENTHESES_TOKEN,
  LEFT_CURLY_BRACE_TOKEN,
  RIGHT_CURLY_BRACE_TOKEN,
  LEFT_SQUARE_BRACKET_TOKEN,
  RIGHT_SQUARE_BRACKET_TOKEN,
  
  QUOTE_TOKEN,
  DOUBLE_QUOTE_TOKEN,
  
  COMMA_TOKEN,
  QUESTION_TOKEN,
  DOT_TOKEN,
]

# computes list token names
TOKEN_NAMES = list(map(lambda spec: spec[0], TOKEN_SPECIFICATION))
